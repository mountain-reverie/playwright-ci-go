name: Continuous Integration

on: [ pull_request, workflow_dispatch, workflow_call ]

jobs:
    lint:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
          with:
            persist-credentials: false

        - uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491
          with:
            go-version: stable

        - name: Run golangci-lint
          uses: golangci/golangci-lint-action@1481404843c368bc19ca9406f87d6e0fc97bdcfd
          with:
            version: v2.0

    tests:
      defaults:
        run:
          shell: bash
      runs-on:  ${{ matrix.runner }}
      strategy:
        fail-fast: false
        matrix:
          include:
          - runner: ubuntu-latest
            platform: amd64
#          - runner: macos-latest
#            platform: arm64
          - runner: windows-latest
            platform: amd64
          - runner: ubuntu-24.04-arm
            platform: arm64
          - runner: macos-13
            platform: amd64

      steps:
        - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
          with:
            persist-credentials: false

        - name: Get go version
          id: go
          run: echo "version=$(grep '^go ' go.mod | cut -d ' ' -f 2)" >> "$GITHUB_OUTPUT"

        - uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491
          with:
            go-version: ${{ steps.go.outputs.version }}    

        - name: Playwright version
          id: playwright
          run: |
            export PLAYWRIGHT_GO_VERSION=$(go list -m all | grep github.com/playwright-community/playwright-go | awk '{print $2}')
            echo "playwright_go_version=$PLAYWRIGHT_GO_VERSION" >> "$GITHUB_OUTPUT"
            echo "version="$(go run github.com/playwright-community/playwright-go/cmd/playwright@$PLAYWRIGHT_GO_VERSION --version |cut -d " " -f 2) >> "$GITHUB_OUTPUT"

        - name: Install Docker
          if: ${{ runner.os == 'macos-13' }}
          uses: douglascamata/setup-docker-macos-action@a9ac5585664f0f68b067ff33c4e993ebd5279425

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349
          
        - name: Build image locally, but use cache from GHA
          uses: docker/build-push-action@48aba3b46d1b1fec4febb7c5d0c644b249a11355
          with:
            context: "{{defaultContext}}:docker"
            build-args: PLAYWRIGHT_VERSION=${{ steps.playwright.outputs.version }}
            push: false
            file: "Dockerfile"
            cache-from: type=gha,scope=${{ matrix.platform }}
            cache-to: type=gha,mode=max,scope=${{ matrix.platform }}
            platforms: linux/${{ matrix.platform }}
            tags: ghcr.io/${{ github.repository }}:${{ github.sha }}
            load: true

        - name: Run tests
          run: |
            export PLAYWRIGHTCI_REPOSITORY=ghcr.io/${{ github.repository }}
            export PLAYWRIGHTCI_TAG=${{ github.sha }}
            go test -v ./...